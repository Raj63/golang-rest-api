// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Rajesh Kumar Biswas",
            "url": "http://github.com/Raj63",
            "email": "biswas.rajesh63@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/diners": {
            "get": {
                "description": "Get all Diners on the system",
                "tags": [
                    "diners"
                ],
                "summary": "Get all Diners",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_Raj63_golang-rest-api_pkg_app_usecases_diner.PaginationResultDiner"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/diner.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/diner.MessageResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new diner on the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diners"
                ],
                "summary": "Create New Diner",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/diner.NewDinerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_Raj63_golang-rest-api_pkg_domain_diner.Diner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/diner.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/diner.MessageResponse"
                        }
                    }
                }
            }
        },
        "/diners/{diner_id}": {
            "get": {
                "description": "Get Diners by ID on the system",
                "tags": [
                    "diners"
                ],
                "summary": "Get diners by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of diner",
                        "name": "diner_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Raj63_golang-rest-api_pkg_domain_diner.Diner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/diner.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/diner.MessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Diners by ID on the system",
                "tags": [
                    "diners"
                ],
                "summary": "Delete diners by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of diner",
                        "name": "diner_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/diner.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/diner.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/diner.MessageResponse"
                        }
                    }
                }
            }
        },
        "/menus": {
            "get": {
                "description": "Get all Menus on the system",
                "tags": [
                    "menus"
                ],
                "summary": "Get all Menus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_Raj63_golang-rest-api_pkg_app_usecases_menu.PaginationResultMenu"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/menu.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/menu.MessageResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new menu on the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menus"
                ],
                "summary": "Create New Menu",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/menu.NewMenuRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_Raj63_golang-rest-api_pkg_domain_menu.Menu"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/menu.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/menu.MessageResponse"
                        }
                    }
                }
            }
        },
        "/menus/top": {
            "get": {
                "description": "Get Top Menus by count on the system",
                "tags": [
                    "menus"
                ],
                "summary": "Get top menus by count",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "top count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_Raj63_golang-rest-api_pkg_domain_menu.Menu"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/menu.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/menu.MessageResponse"
                        }
                    }
                }
            }
        },
        "/menus/{menu_id}": {
            "get": {
                "description": "Get Menus by ID on the system",
                "tags": [
                    "menus"
                ],
                "summary": "Get menus by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of menu",
                        "name": "menu_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Raj63_golang-rest-api_pkg_domain_menu.Menu"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/menu.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/menu.MessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Menus by ID on the system",
                "tags": [
                    "menus"
                ],
                "summary": "Delete menus by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of menu",
                        "name": "menu_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/menu.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/menu.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/menu.MessageResponse"
                        }
                    }
                }
            }
        },
        "/orders": {
            "post": {
                "description": "Create new order on the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Create New order",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/order.NewOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_Raj63_golang-rest-api_pkg_domain_order.Request"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/order.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/order.MessageResponse"
                        }
                    }
                }
            }
        },
        "/orders/{diner_id}": {
            "get": {
                "description": "Get orders by Diner ID on the system",
                "tags": [
                    "orders"
                ],
                "summary": "Get orders by Diner ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of diner",
                        "name": "diner_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_Raj63_golang-rest-api_pkg_domain_order.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/order.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/order.MessageResponse"
                        }
                    }
                }
            }
        },
        "/orders/{order_id}": {
            "delete": {
                "description": "Delete orders by ID on the system",
                "tags": [
                    "orders"
                ],
                "summary": "Delete orders by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of order",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/order.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/order.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/order.MessageResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "diner.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "diner.NewDinerRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Paracetamol"
                },
                "table_no": {
                    "type": "integer",
                    "example": 101
                }
            }
        },
        "github_com_Raj63_golang-rest-api_pkg_app_usecases_diner.PaginationResultDiner": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Raj63_golang-rest-api_pkg_domain_diner.Diner"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "nextCursor": {
                    "type": "integer"
                },
                "numPages": {
                    "type": "integer"
                },
                "prevCursor": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github_com_Raj63_golang-rest-api_pkg_app_usecases_menu.PaginationResultMenu": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Raj63_golang-rest-api_pkg_domain_menu.Menu"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "nextCursor": {
                    "type": "integer"
                },
                "numPages": {
                    "type": "integer"
                },
                "prevCursor": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github_com_Raj63_golang-rest-api_pkg_domain_diner.Diner": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 123
                },
                "name": {
                    "type": "string",
                    "example": "Mr. Smith"
                },
                "table_no": {
                    "type": "integer",
                    "example": 101
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-02-24 20:19:39"
                }
            }
        },
        "github_com_Raj63_golang-rest-api_pkg_domain_menu.Menu": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "Some Description"
                },
                "id": {
                    "type": "integer",
                    "example": 123
                },
                "name": {
                    "type": "string",
                    "example": "Hyderabadi Dum Briyani"
                },
                "price": {
                    "type": "number",
                    "example": 200.5
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-02-24 20:19:39"
                }
            }
        },
        "github_com_Raj63_golang-rest-api_pkg_domain_order.Request": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "diner_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 123
                },
                "menu_id": {
                    "type": "integer",
                    "example": 3
                },
                "quantity": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "github_com_Raj63_golang-rest-api_pkg_domain_order.Response": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "diner_name": {
                    "type": "string",
                    "example": "Mr. Smith"
                },
                "id": {
                    "type": "integer",
                    "example": 123
                },
                "menu_description": {
                    "type": "string",
                    "example": "Hyderabadi Chicken Dum Briyani"
                },
                "menu_name": {
                    "type": "string",
                    "example": "HCDB"
                },
                "quantity": {
                    "type": "integer",
                    "example": 2
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-02-24 20:19:39"
                }
            }
        },
        "menu.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "menu.NewMenuRequest": {
            "type": "object",
            "required": [
                "description",
                "name",
                "price"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Something"
                },
                "name": {
                    "type": "string",
                    "example": "Paracetamol"
                },
                "price": {
                    "type": "number",
                    "example": 200.5
                }
            }
        },
        "order.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "order.NewOrderRequest": {
            "type": "object",
            "required": [
                "diner_id",
                "menu_id",
                "quantity"
            ],
            "properties": {
                "diner_id": {
                    "type": "integer",
                    "example": 1
                },
                "menu_id": {
                    "type": "integer",
                    "example": 3
                },
                "quantity": {
                    "type": "integer",
                    "example": 2
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "localhost:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Golang REST APIs",
	Description:      "Documentation's Golang REST APIs",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
